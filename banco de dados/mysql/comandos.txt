DDL(data definition language):
-crate database: criar banco de dados
-create table: criar tabela
-alter table: alterar table
-drop: banco de dados, tabelas, índices e chave primária.

DML(data manipulation language):
-insert into: adicionar dados
-update: atualizar dados
-delete: apagar registros
-truncate: apaga todos os registros


==========================================================
describe pessoas;
select * from pessoas; 


========================================================================================================================
create database cadastro
default character set utf8mb4
default collate utf8mb4_general_ci;   

==========================================================
use cadastro  
create table pessoas (
id int not null auto_increment,
nome varchar(30) not null,
nascimento date,
sexo enum('M', 'F'), 
altura decimal(3, 2),
peso decimal(5, 2),
nacionalidade varchar(20) default 'Brasil',
primary key (id)
) default charset = utf8mb4;  

==========================================================

create table if not exists cursos (
nome varchar(30) not null unique,
descricao text,
carga int unsigned,
totaulas int unsigned,
ano year default '2024'
) default charset = utf8mb4; 

===========================================================
insert into pessoas
(id, nome, nascimento, sexo, altura, peso, nacionalidade)
values
(DEFAULT, 'Godofredo', '1984-01-02', 'M', '1.83', '78.5', DEFAULT);

insert into pessoas values 
(DEFAULT, '', '', '', '', '', DEFAULT) 

insert into pessoas values 
(DEFAULT, '', '', '', '', '', DEFAULT),
(DEFAULT, '', '', '', '', '', DEFAULT),
...
(DEFAULT, '', '', '', '', '', DEFAULT);

===========================================================
alter table xxxx

add column xxxx varchar(xx);

add column xxxx varchar(xx) after nome;

add column xxxx int first;

modify column xxxx varchar(xx) not null default '';

change column xxxx prof varchar(xx) not null default '';

rename to xxxx;

drop column xxxx;

drop table xxxx;

drop table if exists xxxx;

delete from xxxx
where xxxx = 'x';

update xxxx
set xxxx = 'x', xxxx = 'x', xxxx = 'x'
where xxxx = 'x'
limit 1;

truncate xxxx;

select * from xxxx
order by xxxx desc;
order by xxxx asc;

select xxxx, xxxx, ano from xxxx
order by xxx, xxxx;

select * from xxxx
where ano = '2016'
order by xxxx;

update xxxx set xxxx = '6' where id = '1'; 


select xxxx.xxxx, xxxx.xxxx, xxxx.xxxx, xxxx.xxxx
from xxxx join xxxx
on xxxx.xxxx = xxxx.xxxx;

select g.nome, c.nome, c.ano
from xxxx as x inner join xxxx as x
on x.xxxx = x.xxxx
order by x.xxxx;


select x.xxxx, x.xxxx
from xxxx as x (left/right) outer join xxxx as x
on x.xxxx = x.xxxx;


SELECT YEAR(DATA_VENDA), SUM(QUANTIDADE * PRECO) AS FATURAMENTO
FROM notas_fiscais NF INNER JOIN itens_notas_fiscais INF 
ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(DATA_VENDA)

join: unir 
full join: retorna todos os registros de ambas as tabelas, independentemente de haver correspondência ou não.
inner join: retorna apenas os registros que possuem correspondência nas duas tabelas
cross join: retorna o produto cartesiano das duas tabelas, ou seja, todas as combinações possíveis entre os registros das duas tabelas
(right/left) join: mostra todos os registros de determinado lado e seus correspondentes apenas
union:faz união de duas ou mais tabelas

view: é uma tabela lógica, resultado de uma consulta, que é salva e pode ser usada depois


=========================================================


SELECT ESTADO, LIMITE_DE_CREDITO FROM tabela_de_clientes;
SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes
GROUP BY ESTADO;
-
SELECT EMBALAGEM, 
COUNT(*) AS CONTADOR FROM tabela_de_produtos
GROUP BY EMBALAGEM;


=========================================================
FUNÇOES

++w3schools.coom or mysql documentation

ex:

=====STRING=====
select rtrim('     ola     ') as resultado; :    ola
select ltrim('    ola   ') as resultado; :ola
select upper('ola') as resultado; : OLA
select lower('OLA') as resultado; :ola

SELECT CONCAT(NOME, ' (', CPF, ') ') AS RESULTADO FROM TABELA_DE_CLIENTES;
resultado: Érica Carvalho (1471156710) 


=====DATAS=====
SELECT ADDDATE("2017-06-15", INTERVAL 10 DAY);

SELECT CURDATE();
SELECT CURRENT_TIMESTAMP();
SELECT CURRENT_TIME();

SELECT YEAR(CURRENT_TIMESTAMP());
SELECT MONTH(CURRENT_TIMESTAMP());
SELECT DAY(CURRENT_TIMESTAMP());

SELECT MONTHNAME(CURRENT_TIMESTAMP());

SELECT DATEDIFF(CURRENT_TIMESTAMP(), '2002-05-15') AS DIAS_VIVIDOS;

SELECT CURRENT_TIMESTAMP() AS DIA_HOJE, DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 5 DAY) AS RESULTADO;

SELECT DATEDIFF("2017-06-25", "2024-03-22") as diferença_de_dias;

SELECT DAYNAME("2024-06-15");
SELECT MONTHNAME("2024-06-15");


====MATEMATICAS====
SELECT RAND() AS RESULTADO;    aleatorio
SELECT ROUND() AS RESULTADO;   mais proximo
SELECT FLOOR() AS RESULTADO;   p baixo
SELECT CEILING() AS RESULTADO; p cima











